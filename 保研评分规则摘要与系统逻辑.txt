政策文件评分条款摘要
可加分的材料及分值上限：根据学院推免加分细则，学生本科期间取得的学术成果和综合表现都可计入推免考核成绩。其中学术专长成绩满分15分，综合表现成绩满分5分，超出部分不计[1]。各类材料的具体加分标准如下：
- 科研论文：在学院指定的学术会议/期刊目录上发表的论文可加分[2]。A类论文每篇基准加10分，B类每篇6分，C类每篇1分（C类论文最多计2篇）[2]。特别地，顶尖刊物（Nature/Science主刊及其子刊（IF≥10））视作两篇A类计20分[2]。计分时要求厦门大学为第一单位，且只计算除导师以外学生排名最前的两位作者：第一学生作者计基准分的80%，第二学生作者计20%；如学生为独立第一作者则按100%计分[2]。每篇论文至多认定1位指导教师，不重复计算导师。[2]
- 发明专利：获得国家发明专利授权可加2分/项（以授权证书日期为准）。厦门大学须为第一单位。计分作者仅限除导师外的第一发明人（计基准2分的80%=1.6分，如学生独立为第一发明人则计满2分）[2]。每项专利只认定1位指导老师，累计计分不设单独上限，但学术专长总分封顶15分。
- 学科竞赛：在学院认定的学业竞赛项目库中的竞赛获奖可加分，依据竞赛级别（A+类/A类/A-类）和奖项等次赋分[2]。具体标准如：国家级A+类竞赛一等奖30分、二等奖15分、三等奖10分；国家级A类一等奖15分、二等奖10分、三等奖5分，省级相应奖项分值递减等[2]。个人项目获奖按同级别团体项目一等奖分值的1/3计分[3]；团体项目获奖则根据团队人数平均分配分值：团队2人则每人按1/3计基准分，3–5人团队则每人按1/5计分；团队成员超过5人的仅取前5名核心成员，每人按1/5计分，其他成员不计[3]。部分特定竞赛有额外规则，如“挑战杯”国家赛队长计1/3、第二三作者计1/4、第四五名计1/5基准分[3]。每位学生最多计3项竞赛成绩，其中非信息学院组织的竞赛成绩至多计1项[2]。同一作品参加多个赛事只按所获最高级别或最高奖项计一次分，不得重复累计加分[3]。此外，不在学院竞赛项目库名单内的赛事不予加分，各类邀请赛成绩不计分（如ICPC邀请赛）[3]。
- 创新创业项目：参加大学生创新创业训练计划并成功结题可加分（需提供教务处结题证明）。国家级立项项目：团队组长加1分，成员加0.3分；省级立项：组长0.5分，成员0.2分；校级立项：组长0.1分，成员0.05分[2]。同一项目若获得多级别立项，只按最高级别计一次分，不累加[2]。此类项目加分合计不超过2分。
- 志愿服务：本科期间参加校内外志愿服务（支教扶贫、社区服务、环境保护、校园公益、应急救助等）可计入综合表现。累计服务时间达到200小时即有基础分，200小时后每增加2小时加0.05分，累计加分不超过1分[4]。此外，对在志愿服务中表现突出并获表彰者，根据级别给予一次性加分：国家级表彰加1分，省级0.5分，校级0.25分（个人或团队皆按此，团队表彰则队长按个人标准、队员减半）[2]。注意志愿服务时长加分和表彰加分不可叠加：如同一志愿活动既满足时长要求又获得表彰，只取最高分值一项计入[2]。志愿服务加分总计封顶1分。
- 荣誉称号：本科期间获得各级荣誉称号可加分。国家级荣誉（如国务院、教育部或团中央授予的“三好学生”“优秀学生干部”“优秀共产党员”等）每项2分；省部级荣誉每项1分；校级荣誉（校“三好学生”“优秀干部”等）每项0.2分[2]。同一学年度如获得多项荣誉，只按最高一项计分，不重复累计[3]。集体荣誉（如所在班级或团队获奖）则该集体每位成员得分按个人荣誉标准减半[2]。荣誉称号加分总和最高不超过2分。
- 社会工作（学生干部）：担任学生干部职务按照职级和工作评价加分[2]。设定不同职务级别的系数，例如学院学生会执行主席/团总支书记系数2.0，主席团成员/副书记1.5，部门部长/党支书/班长等1.0，副部长/社团负责人0.75，一般干部/主要干事0.5 等。由辅导员或指导教师根据任职期间工作表现给出评分（百分制），再乘以上述系数并换算成加分。例如担任院学生会部长且评价90分，则加分=90×1.0/100=0.90分。任职满一学年方可获得上述满额加分，任职一学期则按年度分的一半计算[2]。同一学年内兼任多个职务者只取其中最高职务计分，不累加[2]；不同学年担任的职务加分可累积，但总计不超过2分。
- 参军入伍：在校期间应征入伍服兵役满一年以上的，加1分，满两年及以上的，加2分，封顶2分[2]。退役复学后申请推免时按服役年限计入综合表现。
- 体育竞赛：代表厦门大学参加国家级及以上重大体育比赛取得名次的，可计综合表现加分[2]。具体标准：国际级比赛冠军计8分，国际亚军6.5分，国际季军或国家级冠军5分，国家级亚军或国际4–8名3.5分，国家级季军2分，国家级4–8名1分[2]。团体项目获奖按上述分值平均分配给参赛队员；两人项目或个人单项则按相应团体分值的1/3计分[3]。若同一学生在不同体育赛事中多次获奖，只取其中最高一项成绩计分，不累加。同一赛事分不同级别比赛（如预赛/决赛），也只按最高级别计一次分[3]。体育比赛加分计入综合表现，总计不超过5分的上限。
不得计入评分的情形：推免细则对某些不合规或重复的情况明文规定不予计分，确保评分公平公正：
- 合作成果资格限制：学生与直系亲属或学历职称远高于本人者合作取得的论文、专利、竞赛奖项等，只作资格参考，不得计入本人综合成绩[2]。此规定旨在防止借助家庭或他人名义获得不公平优势。
- 特殊学术专长未通过认定：符合特殊学术专长条件的学生需经学院专家组审核成果并答辩通过方能取得特殊加分资格。未通过审核或答辩的，其申报的学术专长不纳入推免综合评价成绩[2]（即不得因为这类未获认可的成果获取额外分数）。
- 课程成绩转换及重修：推免有效成绩以推免工作开始前取得的课程成绩为准。校际交流课程如未在规定时间前完成学分转换的，不计入学业成绩排名[5]。在成绩排名计算中，任何课程重修通过均按60分计入绩点[1]；且累计有三门次及以上重修记录（不含体育游泳）者失去推免资格[1]。因此大量重修将导致无资格参与评分。
- 违纪处罚：凡有考试作弊、剽窃他人成果等学术不端记录，或受过记过及以上纪律处分且在推免开始时处分未解除的学生，均不得参与推免[2]。弄虚作假取得的任何成绩或荣誉一经发现，立即取消资格并按校规处理。
- 成果重复计分：针对同一项成果或事件，不得重复申报、多头加分。例如，同一作品获得多个竞赛奖项只计最高分一项，不叠加[3]；同一次志愿服务既满时长又受表彰，只取其一；同一学年获得多项荣誉称号或担任多项职务，仅按最高的一项计分[3]。这些规则防止因重复计算而不公平地抬高总分。
- 不在认可范围：凡超出政策规定范围的材料一律不计分。如不在学院竞赛项目库清单内的竞赛奖项[3]、非发明类型的专利、超出规定时间（取得时间晚于当年8月31日）的成果、以及未达到要求等级的外语成绩等，都不得计入推免评分体系。邀请赛等非正式竞赛、增设的校内选拔赛等也不予加分，以确保评分仅依据权威和可比的成果。
综合成绩构成与排名规则：学院按照学校推免办法，将推免综合成绩划分为两部分：学业综合成绩和考核综合成绩。推免综合成绩计算公式为：
[1]。
其中学业综合成绩通常以专业成绩排名（GPA）折算而来，占总分80%；考核综合成绩包含学术专长（满分15）和综合表现（满分5）两部分，总占20%。为方便比较，学院采用百分制计分，总分满分100分，其中学业部分满分80分，其余加分部分合计满分20分[1]。具体计算步骤如下：
- 学业综合成绩：由各系教学秘书根据学生前三学年课程成绩计算绩点GPA，并按培养方案规定的课程加权平均，得出专业排名[6]。在计算排名时，上述重修按60分处理等规则已应用，确保排名公平。学院将学生的绩点平均分转换为相应的学业成绩得分（如直接按百分制绩点折算），并进行专业内排序和公示确认。只有专业排名在前列且符合资格的学生才能参加后续推免考核。
- 考核综合成绩：由学院推免工作组依据前述各项成果加分标准，对学生提交的材料进行审核打分[6]。学术专长各项得分相加后如超过15则按15计，综合表现各项合计超过5则按5计，多余部分作废[1]。特殊学术专长通过认定的学生，其学术专长成绩直接记满分15分，不受平时加分累积限制[2]。所有加分材料以当年8月31日为截止日，此日期之后取得的成果不计入当年推免（但学生可在8月31日前补交那年暑期新获得的成绩或证书）[7]。
- 综合成绩排序：学院在审核核算每位申请人“专业成绩分+成果加分”后，生成各专业申请学生的推免综合成绩排名[1]。各系按照学校下达的推免名额，依据综合成绩从高到低依次取前N名作为本专业拟推荐名单。若某专业符合条件的申请人数少于名额，该专业剩余名额交由学院推免工作小组统筹调整，在符合条件的其他专业申请者中按成绩高低递补。初步名单确定后，学院将名单及成绩在院内公示不少于3个工作日。公示无异议或异议不成立后，名单报送学校教务处审定，并进入教育部推免服务系统备案。最终推免资格以学校和上级部门审核通过的名单为准，一经确定的推免生不得无故放弃资格[8][9]。
总结而言，学院推免评分政策通过严格限定加分范围和标准，设立各类上限和禁止条款，力求做到公开透明、可核查复核。综合成绩构成体现“以学业为主，辅以综合素质”的原则，最终遴选出学业优秀并兼具科研创新和全面发展的学生群体。
系统逻辑流程模型（伪代码风格）
下面以自然语言伪代码形式描述“保研加分小助手”系统的完整逻辑流程，从学生使用系统申请推免开始，直到管理员审核确定推荐名单。流程涵盖用户操作、系统自动处理、以及决策分支条件：
1. 学生注册与资格初审：学生打开系统进行注册登录，填写基本个人信息（姓名、学号、专业等）并进入申请界面。系统在学生首次申请时自动检查其基本资格：统计该生累计重修门次、违纪处分记录、专业排名等数据。如果发现不满足推免基本要求（例如重修达到3门次及以上、严重违纪未解除），则系统应提示“不符合推免申请条件，无法继续申请”，并可禁止后续加分材料提交操作[2]。对于尚符合资格但有潜在问题的（如英语成绩暂未达标），系统给予警告提示但允许暂时保存信息：例如“英语四级未达500分，需在8月31日前提交达标成绩，否则将影响资格”[7]。学生确认资格无误后，继续填写学业成绩信息：包括专业排名、平均绩点、英语四/六级成绩等。对于由教务系统导入的数据字段（如专业排名），学生只能查看不能修改；需学生填写的字段则设置格式校验（如四级成绩必须为数字）。完成后学生进入成果填写阶段。
2. 填写成果材料并上传：学生按照不同加分类别逐项添加自己的成果信息和证明材料。系统提供分类入口（如“添加论文成果”、“添加竞赛成果”、“添加荣誉称号”等），每个入口对应特定的表单字段和上传要求。用户在相应表单中录入成果名称/标题、取得时间、等级等元数据，并上传扫描件或照片文件作为证明。支持上传图片（JPEG/PNG）或PDF格式。每上传一项成果，系统会执行以下自动处理流程：
3. OCR文字识别：系统调用第三方OCR接口（如阿里云OCR）对上传的文件进行文字提取。将识别到的文本内容返回并在前端界面展示给学生核对。若OCR结果存在明显错误或无法识别关键信息，系统会高亮提示需人工填写。例如，论文PDF中若OCR未正确识别期刊名称，系统在“刊物名称”字段标记“未识别，请手动输入”。
4. 成果类型判别与信息解析：根据学生选择的类别和OCR提取内容，系统自动分类和提取相关信息字段：
  - 论文类成果：系统匹配OCR文本中的期刊或会议名称，检查其是否属于学院认定的A/B/C类目录；提取论文作者列表并定位学生姓名次序、导师姓名、论文页码或DOI等作为佐证。系统验证该论文厦门大学是否为第一单位（通过单位字段或通讯作者地址判断）。依据规则计算该论文的基础分值（A类10分等）和作者排序得分：如果学生为除导师外第一作者则取80%，第二作者20%，独立第一作者100%。论文类成果若超出C类2篇上限，系统在第三篇及后续C类论文上给予警告“超过计分上限，此项不计分”并将其默认计0分。
  - 竞赛获奖：系统从OCR文本中识别竞赛名称、主办单位、获奖等级等关键词，并在竞赛项目库中查找匹配项。例如识别到“第XX届中国大学生程序设计竞赛 亚军”，系统检索库中对应“CCPC中国大学生程序设计竞赛”，确定其级别为A+类国家级，再根据“亚军”确定奖项等次为二等奖。随后按照竞赛计分规则赋分：查表得到该赛事国家二等奖基准15分，然后判断参赛形式。如果学生填写了团队人数和本人名次，系统据此计算个人得分：如团队4人且未特别指定名次占比，则按团队均分原则每人得15×1/5=3分；若是个人赛则得15×1/3=5分[3]。系统还检查竞赛有效性：若识别的竞赛不在项目库名单内，系统标记该项“❌不在认可竞赛列表，计0分”并提示管理员复核；对于ICPC/CCPC等系列赛，系统确保同一年度同一学生只计其中最高级别一次成绩，不重复计分（如已添加ICPC全球总决赛成绩，则当年区域赛成绩自动不计）。此外，当学生已录入3项竞赛成果后，再试图添加更多时，系统提醒“竞赛加分已达3项上限，新增项目将不计分”。
  - 专利与创新项目：系统解析专利证书的类型和授权日期，确认是否为发明专利以及授权时间是否在8月31日前。如是有效的发明专利且厦大第一单位，则给基准2分；并根据专利作者顺序判定学生得分（第一发明人计1.6分，独立发明人2分）。对于创新创业训练项目，系统让学生选择立项级别（国家/省/校）和本人角色（主持人或成员），然后据规则赋分：如国家级主持人1分，成员0.3分等。同一项目若学生重复添加了校级和国家级立项，系统只保留最高级别分值，低级别记录标注为“已有更高级立项，不计分”。
  - 荣誉称号与综合表现：系统提供字典匹配常见荣誉称号名称，对OCR提取的表彰证书文本进行搜索。如识别到“省级优秀学生干部”，则匹配到省级荣誉加1分。系统会要求输入荣誉授予年度，以便检查同年荣誉不累加：若学生已输入同年度另一项荣誉，则新的荣誉默认计0分并标注“同年度已取最高荣誉，不叠加”。志愿服务时长由学生填写或系统读取志愿服务管理平台数据，系统计算其志愿工时加分（每多2小时0.05分），并与其志愿表彰加分做比较，自动采用高者。学生干部任职则让学生选择职务级别、任职起止时间，系统根据预置系数和考评成绩计算分数。如果发现学生同一年担任多个职务，系统也只保留其中分数最高的一项，其余标记为“重叠职务不重复计分”。
5. 动态加分统计反馈：每添加一项成果后，系统实时更新学生的当前学术专长分、综合表现分及总分，并在页面列出详细条目。例如：“论文：《某题目》—A类期刊独立一作，加10分”或“竞赛：第XX竞赛国家二等奖（团队4人），个人加3分”等。这样学生可以清楚看到每项材料对应的得分和计分依据。如果某项材料经OCR/NLP自动分类有疑误，学生可以手动调整相关字段后重新计算分数（系统提供“重新识别/计算”按钮）。学生也可删除已添加的条目或修改录入信息，直到对所有加分明细确认无误。整个过程中系统会确保各项上限规则及时生效：如综合表现分达到5分封顶后，再加项时总分不再增加，并提示“综合表现已满分”。
6. 特殊学术专长申请处理：对于具备特殊学术专长推免条件的学生（例如发表顶尖论文、在国家级A+类竞赛中获一等奖等），系统提供专项申请流程。学生可以勾选“申请特殊学术专长推免”选项，并上传三封本专业教授推荐信等额外材料[10]。系统首先校验学生是否满足基本条件（如前述顶尖成果是否确有，其材料是否已在成果列表中提交）。若条件符合，系统接受申请并将其标记为“待专家审核”。此类申请流程如下：
7. 学院管理员（或推免专家组）在系统中查看该生的特殊专长材料，对论文影响力、竞赛级别等进行审核鉴定[2]。审核通过后，学院会线下组织不少于5名专家的公开答辩（该环节系统可不直接介入，但管理员可在系统中记录答辩时间、结果等）。
8. 若答辩评审通过（专家组一致同意）的，管理员在系统中将该申请状态设为“通过”，并触发系统将该学生的学术专长成绩直接赋满分15分[2]。此时该生的已有科研成果加分可以不再累计（系统可将其他论文竞赛项标记为“特殊专长通道，已满分”状态）。
9. 若评审未通过或专家组有异议，管理员将申请状态设为“未通过”，并填写简要原因。系统对此类学生采取正常加分计算流程，不给予特殊15分优惠。[2]需要注意的是，根据政策未通过特殊专长认定的成果不纳入综合评价计分体系，因此对于走特殊通道失败的学生，其先前提交的顶尖成果在普通加分中是否计入需按照学院细则执行（一般情况下，未通过认定主要是对不符合条件的申报，真实成果依然会按普通加分计入）。系统应在流程中提示这一政策，以便管理员决定如何处理这部分成绩。
10. 综合成绩计算与合成：学生提交全部材料后，可以点击“计算综合成绩”查看总分。系统此时汇总三部分成绩：
11. 从数据库或后台获取该生的学业综合成绩（如专业成绩折算分）。如果学业成绩尚未导入系统，按需要可由管理员统一导入或允许学生填写后由辅导员确认。学业成绩将在最终计算时按80%的权重计入总分。
12. 系统按照规则累计学生所有录入的学术专长得分和综合表现得分。在之前的步骤中已对每项进行了加分计算，这里进一步应用各项封顶规则：确保学术专长分不超过15，综合表现分不超过5[1]。特殊专长通过者此时其学术专长应为15满分。
13. 计算推免综合成绩：按照公式将学业成绩（满分100）乘0.8，加上学术专长分和综合表现分，得出总分[1]。例如某生学业成绩85分，学术专长12分，综合表现4分，则推免综合成绩=85×0.8+12+4= +[1]。系统将该总分四舍五入或保留两位小数显示，并可对学生所在专业当前排名进行预估（如果其他学生数据已可见）。此排名仅供参考，正式排名以管理员审核确认后为准。
14. 学生可在“我的综合成绩”页面查看各项成绩明细和总分。例如：“学业成绩：85（换算后计68分）；学术专长：12分；综合表现：4分；推免综合成绩：84分”，以便核对。如对系统计算存在疑问，学生可以在截止前继续修改材料或联系老师咨询。
15. 全院/专业排名与名额筛选：在学生提交阶段，系统可以提供实时的模拟排名功能：学生能够查看自己在本专业已提交申请者中的当前排名情况（前提是隐私和公平考虑允许公开排名）。待所有申请截止后，系统依据最终确认的各人综合成绩生成正式排名，用于名额分配：
16. 按专业排序筛选：系统按照不同专业，将所有申请学生按综合成绩从高到低排列。根据教务处下达的各专业推免名额数，系统在排名列表中自动标注出入选线。例如某专业有5个名额，则标记该专业排名第1–5名为“拟推荐”，第6名及以后为“未入选”。在界面上，可用不同底色突出入选者名单。对于专业申请人数不足名额的情况（如某专业有3人申请但有5个名额），系统提示“X专业尚有余量2名”，并将这部分名额标签为未用。
17. 全院排名参考：学院推免工作小组需要对全院范围统筹名额时，系统可生成全院综合成绩总榜，汇总所有申请学生（除特殊专项如支教团单列外）。当出现专业名额有剩余时，可依据全院总榜成绩高低进行调剂推荐。系统可以允许管理员选中某专业的空余名额，在全院总榜中按成绩顺延筛选下一名符合条件的学生递补。此操作通常需要人工决策，系统提供数据支持即可。
18. 资格过滤：在排名列表中，系统还应检查每个学生的资格情况，排除不符合推免条件者。例如某些学生综合成绩靠前但外语成绩未达标或有其他一票否决问题，应在名单中标记“资格未满足”，从而不占用名额。这样最终推荐名单实际按条件合规者顺延。对于特殊学术专长通过认定者，因其不受综合排名限制，系统应将其直接列入拟推荐（但仍计入所在专业推免指标名额）。
19. 管理员审核与调整：学院管理员登录系统管理端后，将执行对所有学生申请材料的线上审核。审核流程采用逐个学生审核制，并提供必要的批量操作工具：
20. 材料核验：管理员进入某学生的详情审核页面，可以看到该生提交的所有加分项列表和系统计算的分值。每一项都附有“查看证明材料”按钮，点击可在系统中预览该PDF/图片文件，以及OCR识别摘要。管理员需对照原件确认材料真实性和信息准确。对于系统自动分类和计分有误的情况，管理员可以直接更正：例如如果某论文实际属于A类但系统识别为B类，管理员可在界面将其类别改为A类，系统将重新计算该论文分值并更新总分。再如某竞赛团队人数实际为3人但学生未填，管理员可补充数据或修正计分比例。系统记录管理员所做的每一处修改，并在前端标记“（管理员已调整）”字样。
21. 资格审查：管理员同时审核学生的资格项是否满足要求，包括学业成绩排名、英语成绩证明、重修情况、诚信承诺书签署等。系统提供这些信息的汇总，如重修科目数、处分记录等供参考。如果发现某学生并不符合推免条件（例如提交时资格审查遗漏的问题），管理员有权终止其申请：在系统将其状态改为“不通过资格审核”，并注明原因，该学生将被排除出排名名单。
22. 退回补正：若管理员发现学生材料有缺漏或疑点，可将该申请置为“退回修改”状态，并在系统中填写退回理由（例如“竞赛奖项证明不清晰，请重新上传原件扫描件”或“论文作者顺序存疑，请提供期刊检索页”等）。系统会将退回通知发送给学生，学生可以登录查看具体反馈，在限定时间内补充修改资料后重新提交。被退回的申请在重新提交前不会进入最终排名。
23. 特殊加分审核：对于标记为特殊学术专长申请的学生，管理员需在系统中录入专家组审核结论和答辩结果。如果通过，则选中“特殊专长认定通过”并由系统赋予15分学术专长满分[2]；如未通过则取消其特殊通道资格（系统已在之前步骤处理对应分值）。管理员也须验证这些学生提交的顶尖成果是否存在学术不端等情况，一旦发现造假将取消其所有加分并注明违规。
24. 确认提交：管理员完成对每个学生的审核后，可点击“审核通过”确认该生成绩。系统将锁定通过学生的各项分数，不再允许其本人修改。同时系统统计已审核通过的人数，方便管理员把控进度。管理员可随时暂存审核进度，以便跨多人/跨时段协作审核。
25. 排名发布与结果公示：当所有申请的学生都审核完毕后，系统进入结果发布阶段：
26. 管理员一键生成各专业的最终推荐名单和候补名单。系统根据之前的排名筛选规则正式列出各专业入选者，并与名额匹配。如有学院统筹调剂的变化，可在此时由管理员手动调整名单（系统应提供人工调整名单顺序的功能，但要求填写备注）。调整后的名单系统会重新校验是否满足名额及资格约束，并提示管理员确认。
27. 系统支持将最终结果导出为Excel或PDF格式报表，包括每位学生的综合成绩明细和排名顺序，供学院备份存档和上报学校使用。同时，系统可以生成一个适合对外公示的名单（仅显示姓名、综合成绩、排名等必要信息，隐去敏感分项），发布在公示页面。该页面为只读，并提供打印功能，公示期结束后可以关闭访问。
28. 在推免录取阶段，系统还可为获得资格的学生生成提示，例如“恭喜入选推免，请登录教育部推免服务系统填报志愿”之类，并提供校验码或相关指导。未入选的学生则显示遗憾信息或保留查询功能以示透明。
29. 日志和追溯：系统应将整个过程中所有关键操作（学生提交/修改、管理员审核/调整）的记录保存于日志表中，包括时间、操作者、操作内容等。一旦后期对评分结果有异议，管理员可以通过日志追溯核查每一项分数的来龙去脉，提供明确的依据解释，确保过程公开公正。
技术实现建议
针对以上逻辑，后端技术栈采用Kotlin + Spring Boot，前端Vue3 + Element Plus的架构。为提高开发效率、确保代码简洁健壮，提出以下实现建议：
- Kotlin语言及现代语法：充分利用Kotlin的数据类（data class）来定义领域模型，如学生、成果项、竞赛项目等实体。数据类可以自动生成toString()、equals()、copy()等方法，使模型定义更简单明确[11]。使用扩展函数（Extension Function）为已有类添加业务功能，例如给Achievement类添加calcScore()扩展函数，用于根据类型计算分值[12]。借助Kotlin的空安全类型系统和默认参数特性，可以避免空指针异常并减少方法重载。引入sealed class密封类层次来表示有限几种成果类别（论文、专利、竞赛等），编译期保证分类覆盖，提高模式匹配的安全性和可读性。对于集合数据处理，推荐使用Kotlin的函数式流式操作，如map/filter/sumBy等来实现加分汇总、排序筛选等逻辑，使代码更语义化，减少繁琐的循环代码[13]。例如：val totalScore =      achievements.filter { it.valid }.sumByDouble { it.calcScore() }。同时可结合协程（Coroutines）处理异步任务，如并行调用OCR接口、发送通知邮件等，避免回调地狱，提高吞吐性能。
- 规则配置与DSL设计：鉴于推免评分细则可能出现调整，系统应尽量将评分规则参数化，甚至考虑设计领域专用语言（DSL）来配置规则。可以使用Kotlin的类型安全DSL功能，将复杂的规则以接近自然语言的形式描述。例如构建一个ScoreRules.kt配置，里面用DSL定义各类成果的加分规则、上限和约束条件：
- scoring {
    paper {
        category("A") { base = 10; authorWeights = [0.8, 0.2] }
        category("B") { base = 6; ... }
        maxCount("C") = 2
    }
    competition {
        level("A+") { first=30; second=15; third=10 }
        ...
        teamDistribution = average(teamsize=5) // 团队超5人按前5人均分
        maxItemsPerStudent = 3
    }
    ...
}
- 通过这样的内部DSL配置，日后政策调整（如改变分值或上限）只需修改配置而不必深入业务代码。此外，像公式计算这类规则也可采用表达式引擎来配置：比如使用JSR-223脚本引擎（JavaScript、Groovy等）或第三方表达式库（如MVEL、Aviator）解析计算公式，使业务规则“热插拔”。简单场景下亦可使用Spring Expression Language（SpEL）结合配置文件来定义计算规则。在设计DSL或规则引擎时，要注意性能和安全（限制可执行操作），以防用户提交恶意表达式。
- 关键第三方库：后端建议引入JSON序列化库如Jackson或Kotlin原生的kotlinx.serialization，方便将数据对象与前端交互的JSON自动映射。对于OCR结果的文本解析，可以使用正则表达式和自然语言处理工具辅助。例如引用阿里云NLP的实体识别API来提取证书中的赛事名称、等级等；或者使用开源库Stanford NLP对英文论文名进行类别识别。如果需要解析复杂文档结构，可考虑阿里云文档智能解析服务，将PDF表格、列表转换为结构化数据[14]。在处理评分规则时，如采用了表达式字符串计算，可使用Commons JEXL或MVEL库执行自定义表达式。对于导出Excel报表，推荐阿里EasyExcel或Apache POI库简化Excel读写。权限安全方面，可使用Spring Security对接口进行基于角色的访问控制，结合JWT实现前后端无状态认证。
- 前后端通信与前端组件：前端采用Vue3组合式API，使用Axios与后端REST接口通信。建议根据业务模块划分API路径，如/api/student/achievements、/api/admin/review等，并统一返回格式（带code和message）。前端表单设计应充分利用Element Plus的组件，如Upload上传组件用于文件，Form表单组件配合校验规则完成成绩和成果输入。可以编写自定义组件如“成果项组件”，根据选择的成果类型动态显示不同字段子组件，提高复用性。前端状态管理使用Pinia代替Vuex，轻量高效地管理用户信息、缓存字典数据（竞赛项目库、期刊目录等）[12]。Pinia的模块化设计和typescript支持可以帮助我们维护大型表单状态。对于OCR调用等可能耗时的操作，前端应给予用户提示加载，并轮询或等待结果，避免长时间卡顿。可引入AntV/G2等可视化库制作简单图表，用于管理员界面展示统计（如各类加分项数量、分数分布）以辅助决策。
- 系统外部接口模块：整个评分系统需要与多种外部服务和数据源交互，需提前设计好接口封装和模块边界：
- 数据库（MySQL）： 使用关系型数据库存储用户账户、成绩和成果数据。采用JPA或MyBatis框架实现数据访问层。设计表结构时，划分好基础数据表（如竞赛项目库、期刊目录）、业务数据表（学生、成果、成绩）和日志表。通过数据库完成最终排名的查询和持久化。考虑并发下的数据一致性，关键计算采用事务包裹，防止更新冲突。
- 前端表单输入：前端会将结构化的成果信息通过JSON提交后端，例如：{type:"competition", name:"挑战杯", level:"国家级", prize:"一等奖", teamSize:3, rank:1, proofFileId:123}。后端需设计对应的数据结构（如Kotlin数据类Achievement子类CompetitionAchievement）来绑定JSON。利用Spring MVC的@RequestBody自动映射，并进行基本格式校验（可结合Hibernate Validator注解实现字段约束，如@NotBlank等）。对于文件上传，采用前后端分离的文件上传接口：前端组件将文件POST到如/api/upload，由后端接受保存后返回文件ID或URL，再由前端将该ID与成果其他信息一同提交关联。
- 文件存储与OCR： 上传的材料文件可存储在本地文件系统，也可以集成云存储（如阿里云OSS）。为提高OCR识别速度和准确性，建议直接调用成熟的云OCR服务。阿里云OCR和腾讯云OCR均提供REST API，使用APP Key进行认证即可。后端需封装OCRService模块，向这些API发送文件数据（或文件下载URL）并获取文字结果。考虑到OCR属耗时IO操作，建议使用异步线程池或协程调度，避免阻塞主线程。在高并发情况下对OCR调用做好限流策略（例如单用户提交节奏控制，或使用消息队列串行处理OCR请求）。如OCR每日有调用额度限制，管理员可在系统后台设置是否启用自动OCR，以便必要时切换为人工录入模式。
- 管理员管理端：管理员需要通过系统执行审核、调整和导出等操作。后端应提供管理REST接口，例如：
  - GET /api/admin/applications：获取所有待审核申请列表概要（姓名、总分、状态等）；
  - GET /api/admin/application/{id}：获取某学生详细材料及分项分数；
  - POST /api/admin/review/{id}：提交对某学生的审核结果（通过/退回/修改分数等）；
  - PUT /api/admin/achievement/{aid}：修改某个成果条目的认定类别或分值；
  - POST /api/admin/finalize：确认提交最终名单并生成导出。这些接口应受管理员角色权限保护。对于Excel导出，可实现一个GET /api/admin/export.xlsx接口，调用POI生成文件并通过HTTP附件下载形式提供给前端。管理端还可包括维护接口，如更新竞赛项目库、更新期刊目录的接口，使系统支持新政策数据快速导入。
- 系统部署与安全：考虑学校服务器环境，推荐使用Docker容器部署后端服务、前端静态站点和数据库，实现一次配置，多环境运行。例如使用Docker Compose编排三个容器：Spring Boot后端容器、Nginx+前端静态文件容器、MySQL容器。Nginx作为反向代理，将/api/请求转发给后端容器，其余请求服务前端静态资源，提高并发性能[15]。启用HTTPS保障传输安全，使用学校统一认证或短信验证码等手段加强登录安全。系统需做好访问控制，前后端都应校验用户身份和权限令牌，防止普通学生通过接口篡改他人成绩或越权访问管理功能。服务器端对于关键操作（如管理员改分、名单确定）应增加操作日志和二次确认机制。另外，定期备份数据库，提供日志审计功能，以应对潜在争议和保障数据安全可靠。
综上，结合先进的Kotlin编程范式和稳健的Web架构设计，“保研加分小助手”系统将在保证规则严谨准确的前提下，实现流程的高度自动化和智能化。通过模块化的实现和灵活的配置，系统能够适应将来政策细微调整，不断助力学院推荐免试研究生工作的公平高效开展。

---
[1] [4] [6] [7] [10] [14] 信息学院（特色化示范性软件学院）关于做好2025年推荐优秀应届本科毕业生免试攻读研究生工作的通知-厦门大学信息学院
https://informatics.xmu.edu.cn/info/1024/39819.htm
[2] [5] [8] [9] 关于做好2026年推荐优秀应届本科毕业生免试攻读研究生工作的通知-厦门大学化学化工学院飞扬网
https://feelyoung.xmu.edu.cn/info/1003/9494.htm
[3] [15] 电子信息工程学院2025年推荐（接收）优秀应届本科毕业生免试攻读研究生实施细则-西安工业大学电子信息工程学院
https://dxxy.xatu.edu.cn/info/15493/192220.htm
[11] Kotlin语言的代码重构原创 - CSDN博客
https://blog.csdn.net/2501_90932908/article/details/146145339
[12] 实用的Kotlin扩展函数，简化你的代码转载 - CSDN博客
https://blog.csdn.net/chuyouyinghe/article/details/133948641
[13] 为什么使用kotlin 后端开发 - Smartbrain Blog
https://blog.chinese-smartbrain.com/why-use-kotlin-backend-development.html
